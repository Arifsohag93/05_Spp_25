---
title: "Assignment 6 - Split-plot randomization"
author: "Md Ariful Islam Sohag"  
format:
  html:
    code-fold: true 
    embed-resources: true
    toc: true
    number-sections: true
    theme: cerulean
---

# Introduction  
This assignment will ask you to conduct a split-plot RCBD randomization. 

For that, you will first need to watch (and code along with) the following split-plot randomization video:

- split-plot randomization: https://youtu.be/rXTp3Vw_770?si=MajBK1aZ221orfpa&t=3401 (starts at 00:56:41, watch till end, about 50-min total)

- The partial script for the video above is in our GitHub repository, 04-classcode, **02-13_spp_randomization_partial.qmd**.


**AFTER watching the video and developing the code in class**, then start working on this HW assignment.  

The different sections representing what we did in class were left in the script to provide you a scaffold to start from.  

# Instructions  
  - Move this script into the `code` subfolder of your `05_spp` project folder  
  - On this script, fill your name under the `title` section of the YAML  
  
# Goal of this assignment  
The goal is this assignment is for you to **design a split-plot RCBD design applicable to your area of study**.  

This could be from your own experience, an example from the literature, or something you come up entirely on your own (as long as it makes sense).  

In the headings below, you will answer a couple of questions related to study objectives and treatment design, and then move on to randomize your study, create a plot layout, and export the designed table to file.  

# Setup  
Here is where we load the packages we will use.  
Make sure to load each package in the chunk below.  
```{r setup, warning=FALSE, message=FALSE}
library(tidyverse)
```



# Treatment design  
## Objectives  
Write here what are the objectives of the study you are designing. Remember that objectives are closely connected with your treatment design, so whatever you say are your objectives should carry through on your choice of treatment factors and levels.  

Background: Iron can significantly increase the rate of photosyntheis in any crop. Photosyntheis process requires significant amount of water. Therefore, a successful tomato production requires an optimum rate of iron and irrigation. 

Hypothesis: Increase in the rate of iron and irrigation will increase the growth of tomato production.

Objective: To evaluate the effect of increasing rate of iron and irrigation in tomato production.


## Treatment design explanation  
Here is where you explain your treatment design, including the name of the treatment factors, their levels (don't forget to include units), and which is the whole-plot treatment factor and which one is the split-plot treatment factor.  

-   2-way factorial **in a split-plot**  
-   **Whole-plot** treatment factor: irrigation rates: 0%, 50%, 100% \
-   **Split-plot** treatment factor: Fe fertilizer rates: 0, 100, 200 mg Fe/kg\
-   3 x 3 = **9 treatment combinations** that will be assigned to different sizes of experimental units!  


## Code  
Here develop the code to setup your design (like in class).   



# Split-plot in RCBD  
## WP randomization  
First, I will randomize the whole-plot treatment factor (irrigation rate) to the blocks.

```{r wp_rcbd_rand}
set.seed(940)
wp_rcbd_rand <- crossing(irigation_percent = c(0, 50, 100),
                         block = 1:4
                         ) %>%
  arrange(block) %>%
  group_by(block) %>%
  mutate(irigation_percent = sample(irigation_percent))%>%
  mutate(wplot = (block*100)+1:3) %>%
  ungroup()

wp_rcbd_rand
```


## SP randomization  
Now, I will randomize the split-plot treatment factor (Fe rate) to the WP treatment plots.

```{r sp_rcbd_rand}
sp_rcbd_rand  <- crossing(Ferate_mgkg = c(0,100,200),
                          wplot = wp_rcbd_rand$wplot
                          ) %>%
  arrange(wplot) %>%
  # Randomizing SP treatment factor to WP plots (restricted)
group_by(wplot) %>%
mutate(Ferate_mgkg = sample(Ferate_mgkg)) %>%
  # Creating SP plot numbers 
mutate(splot = paste0(wplot, "-", 1:3)) %>%
  ungroup()

sp_rcbd_rand
```

## Joining WP and SP into one object

Here, I will join the rcbd created for the irrigation and Fe rate by using paste0 function to create split-plot. I will aslo create treatment name for each plot.
```{r spp_rcbd_rand}
spp_rcbd_rand <- wp_rcbd_rand %>%
  right_join(sp_rcbd_rand) %>%
  mutate(trtname = paste0(irigation_percent, "+", Ferate_mgkg))

spp_rcbd_rand
```
Here, I am checking if each block containning the three irrigation percent in total 9 times and for each irrigation percent have different Fe rate. To check, I am extracting block 1.
```{r}
spp_rcbd_rand %>%
  filter(block == 1)
```

## Plot layout 
In this chunk, I am defining the rows and columns for the plot layout. Also, I will create another column to "lab" by joining the trtname and the splot.

```{r spp_rcbd_layout}
spp_rcbd_layout <- spp_rcbd_rand %>%
  # Defining number of rows and columns in the field for plotting purposes
  mutate(row = rep(1:4, each = 9)) %>%
  mutate(col = rep(seq(from = 1, 
                       to = 9, #total number of treatments, 
                       by = 1), 
                   times = 4 #total number of blocks
  )) %>%
  # Creating plot and trtname labels for plotting
  mutate(lab = paste0(splot, "\n", trtname))

spp_rcbd_layout
```
Now, After defing row and column for the plot layout, it is time to plot it by using ggplot.
```{r spp rcbd map}
ggplot(data = spp_rcbd_layout, aes(x = row, 
                                   y = -col)) + 
  geom_tile(aes(fill = factor(Ferate_mgkg)),
            color = "black",
            show.legend = F
            
            ) +
  
  geom_tile(aes(color = irigation_percent), 
            show.legend = F,
            linewidth = 2,
            linetype = 2,
            fill = NA
            ) + 
  
  

    scale_fill_manual(values = c("#d9b382",
                             "#8c6d31",
                             "#ffeda0")) +

  geom_text(aes(label = splot), fontface = "bold", vjust = -.8) +
  geom_text(aes(label = trtname), vjust = 1) +
  labs(title = "Split-plot RCBD randomization of a\n3 irrigation_percent (whole-plot) x 3 Fe_rate (split-plot) treatment design") +
  theme_void()

```


# Exporting to file  
Here, I am exporting a table and image of the plot layout in my computer.

```{r}
spp_rcbd_rand %>%
  # Rearranging columns  
  dplyr::select(block, wplot, irigation_percent, 
                splot, Ferate_mgkg,
                trtname) %>%
  write_csv("../output/spp_rcbd_randomization_table_assignmen6.csv")


```



```{r}
ggsave("../output/spp_rcbd_layoutmap_assignment_6.png",
       width = 6,
       height = 5,
       bg = "white")
```


# Submitting your work  
Once you have developed all the code and answers, make sure to Render this quarto file.  

**Notes on rendering**:  

- Make sure to render your work and inspect how the final html look like.  
- If it does not look professional for whatever reason, then fix the issue, re-render it, recheck.  
- Only send me your work once your html file looks professional.  
  - **DO NOT** delete the file's heading levels (# and ##). They set up the proper heading 1 and 2 levels, and I use them to guide my grading.  
  - If a given chunk is also outputting warnings or messages, inhibit this behavior by changing the chunk options `message` and `warning` to `FALSE` (I'll demo this in a moment).  
  
  - If, after rendered, 2 lines of text are connected and you wish to "break line" between them, add 2 extra spaces after the first one (I'lld demo this in a moment).  

After rendering, an .html file will be created on your `code` folder.  

Rename this file to `Assignment-06-spp-LASTNAME.html`.    

For ex., mine would be `Assignment-06-spp-Bastos.html`.

Submit your work by uploading the **html** file to **eLC Assigment #6 - Split-plot randomization** by Feb 20 11:59 pm.  
  




